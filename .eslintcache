[{"/Users/mingchiwong/Documents/code/MercuryJC2/src/index.js":"1","/Users/mingchiwong/Documents/code/MercuryJC2/src/App.js":"2","/Users/mingchiwong/Documents/code/MercuryJC2/src/reportWebVitals.js":"3","/Users/mingchiwong/Documents/code/MercuryJC2/src/Sidebar.js":"4","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Homepage.js":"5","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/AboutMe.js":"6","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Commissions.js":"7","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/MyWork.js":"8","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/ContactMe.js":"9","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Shop.js":"10","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giwp.js":"11","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Bcs.js":"12","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Bts.js":"13","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Ac.js":"14","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Cpsb.js":"15","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Cspsba.js":"16","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giesb.js":"17","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gic.js":"18","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Cspsbb.js":"19","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gig.js":"20","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Ddhvs.js":"21","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gij.js":"22","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gicvs.js":"23","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gikaz.js":"24","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gie.js":"25","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gim.js":"26","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gih.js":"27","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giy.js":"28","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Jnsb.js":"29","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Lacspsb.js":"30","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giz.js":"31","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Kda.js":"32","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Mgsb.js":"33","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Mcsb.js":"34","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Mahvs.js":"35","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sbspa.js":"36","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sbspb.js":"37","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sssb.js":"38","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Vnmvs.js":"39","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gikam.js":"40","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gik.js":"41","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Upmsb.js":"42","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giq.js":"43","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sbsb.js":"44","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Footer.js":"45","/Users/mingchiwong/Documents/code/MercuryJC2/src/ArtWorkImages.js":"46","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/ScrollUpButton.js":"47","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Comments.js":"48","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/ShopItems.js":"49"},{"size":590,"mtime":1670612017272,"results":"50","hashOfConfig":"51"},{"size":5834,"mtime":1670003162275,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1670003164445,"results":"53","hashOfConfig":"51"},{"size":4663,"mtime":1670003164444,"results":"54","hashOfConfig":"51"},{"size":675,"mtime":1670003164459,"results":"55","hashOfConfig":"51"},{"size":2854,"mtime":1670003164446,"results":"56","hashOfConfig":"51"},{"size":2030,"mtime":1670003164450,"results":"57","hashOfConfig":"51"},{"size":1282,"mtime":1670003164459,"results":"58","hashOfConfig":"51"},{"size":3328,"mtime":1670003164451,"results":"59","hashOfConfig":"51"},{"size":1486,"mtime":1670003164463,"results":"60","hashOfConfig":"51"},{"size":1428,"mtime":1670003163153,"results":"61","hashOfConfig":"51"},{"size":1378,"mtime":1670003163150,"results":"62","hashOfConfig":"51"},{"size":1431,"mtime":1670003163151,"results":"63","hashOfConfig":"51"},{"size":1516,"mtime":1670003163150,"results":"64","hashOfConfig":"51"},{"size":1422,"mtime":1670003163151,"results":"65","hashOfConfig":"51"},{"size":1523,"mtime":1670003163151,"results":"66","hashOfConfig":"51"},{"size":1443,"mtime":1670003163152,"results":"67","hashOfConfig":"51"},{"size":1515,"mtime":1670003163151,"results":"68","hashOfConfig":"51"},{"size":1523,"mtime":1670003163151,"results":"69","hashOfConfig":"51"},{"size":1632,"mtime":1670003163152,"results":"70","hashOfConfig":"51"},{"size":1511,"mtime":1670003163151,"results":"71","hashOfConfig":"51"},{"size":1503,"mtime":1670003163152,"results":"72","hashOfConfig":"51"},{"size":1589,"mtime":1670003163152,"results":"73","hashOfConfig":"51"},{"size":1521,"mtime":1670003163153,"results":"74","hashOfConfig":"51"},{"size":1503,"mtime":1670003163152,"results":"75","hashOfConfig":"51"},{"size":1503,"mtime":1670003163153,"results":"76","hashOfConfig":"51"},{"size":1504,"mtime":1670003163152,"results":"77","hashOfConfig":"51"},{"size":1506,"mtime":1670003163153,"results":"78","hashOfConfig":"51"},{"size":1424,"mtime":1670003163154,"results":"79","hashOfConfig":"51"},{"size":1464,"mtime":1670003163154,"results":"80","hashOfConfig":"51"},{"size":1506,"mtime":1670003163153,"results":"81","hashOfConfig":"51"},{"size":1606,"mtime":1670003163154,"results":"82","hashOfConfig":"51"},{"size":1424,"mtime":1670003163154,"results":"83","hashOfConfig":"51"},{"size":1426,"mtime":1670003163154,"results":"84","hashOfConfig":"51"},{"size":1518,"mtime":1670003163154,"results":"85","hashOfConfig":"51"},{"size":1432,"mtime":1670003163155,"results":"86","hashOfConfig":"51"},{"size":1576,"mtime":1670003163155,"results":"87","hashOfConfig":"51"},{"size":1500,"mtime":1670003163155,"results":"88","hashOfConfig":"51"},{"size":1717,"mtime":1670003163156,"results":"89","hashOfConfig":"51"},{"size":1529,"mtime":1670003163153,"results":"90","hashOfConfig":"51"},{"size":1567,"mtime":1670003163152,"results":"91","hashOfConfig":"51"},{"size":1509,"mtime":1670003163155,"results":"92","hashOfConfig":"51"},{"size":1567,"mtime":1670003163153,"results":"93","hashOfConfig":"51"},{"size":1498,"mtime":1670003163155,"results":"94","hashOfConfig":"51"},{"size":921,"mtime":1670003164458,"results":"95","hashOfConfig":"51"},{"size":4074,"mtime":1670003162970,"results":"96","hashOfConfig":"51"},{"size":870,"mtime":1670003164460,"results":"97","hashOfConfig":"51"},{"size":3609,"mtime":1671820937024,"results":"98","hashOfConfig":"51"},{"size":9114,"mtime":1670003164464,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1mtiub6",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"102"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"102"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"102"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"102"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"102"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"102"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"102"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/Users/mingchiwong/Documents/code/MercuryJC2/src/index.js",[],["238","239"],"/Users/mingchiwong/Documents/code/MercuryJC2/src/App.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/reportWebVitals.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/Sidebar.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Homepage.js",["240"],"import React from 'react'\nimport './Homepage.css'\nimport Carousel from 'react-material-ui-carousel'\nimport ArtWorkImages from '../ArtWorkImages'\nimport Footer from './Footer'\n\n//Carousel is a React material ui package used to display images from ArtWorkImages component.\n//ArtWorkImages component is then mapped to display all the images. The src is used to indentify the title of each image. \n\nconst Homepage = () => {\n  \n  return (\n      <div>\n         <h1>Homepage</h1>\n         \n          <Carousel>\n            {ArtWorkImages.map((src)=>(<img className='art_work' src={src.path}/>))}\n          </Carousel>\n      <Footer/>\n      </div>\n   \n  )\n}\n\nexport default Homepage\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/AboutMe.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Commissions.js",["241","242","243","244","245","246","247","248","249","250","251"],"import React from 'react'\nimport './Commissions.css'\nimport Pardofelis from \"../ArtCommissionImages/Illustrationfullcolour/Bust/Pardofelis.jpg\"\nimport YaeMiko from \"../ArtCommissionImages/Illustrationfullcolour/Bust/YaeMiko.jpg\"\nimport MonarchMona from \"../ArtCommissionImages/Illustrationfullcolour/Waist-Up/MonarchMona.jpg\"\nimport PoroKingxMatty from \"../ArtCommissionImages/Illustrationfullcolour/Waist-Up/PoroKingxMatty.jpeg\"\nimport PorcelainGanyu from \"../ArtCommissionImages/Illustrationfullcolour/Full-Body/PorcelainGanyu.png\"\nimport StarchasmHutao from \"../ArtCommissionImages/Illustrationfullcolour/Full-Body/StarchasmHutao.jpg\"\nimport Headshot1 from \"../ArtCommissionImages/Illustrationsimplecolour/headshot.jpeg\"\nimport Waistup1 from \"../ArtCommissionImages/Illustrationsimplecolour/waistup.jpeg\"\nimport Headshot2 from \"../ArtCommissionImages/Chibi/headshot.png\"\nimport Fullbody from \"../ArtCommissionImages/Chibi/fullbody.png\"\nimport Emotes from \"../ArtCommissionImages/Emotebadges/emotes.jpeg\"\nimport Footer from './Footer'\nimport ScrollToTop from './ScrollUpButton'\n\nconst Commissions = () => {\n  return (\n    <div className='illustrations'>\n      <h1>Commissions</h1>\n      <p>These are just previews only of my commissions.</p>\n      <h1>ILLUSTRATION(FULL-COLOUR)</h1>\n        <h5>BUST</h5>\n          <img src={Pardofelis}/>\n          <img src={YaeMiko}/>\n        <h5>WAIST-UP</h5>\n          <img src={MonarchMona}/>\n          <img src={PoroKingxMatty}/>\n        <h5>FULL-BODY</h5>\n          <img src={PorcelainGanyu}/>\n          <img src={StarchasmHutao}/>\n      <h1>ILLUSTRATION(SIMPLE-COLOUR)</h1>\n        <h5>HEADSHOT</h5>\n          <img src={Headshot1}/>\n        <h5>WAIST-UP</h5>\n        <img src={Waistup1}/>\n      <h1>CHIBI</h1>\n        <h5>HEADSHOT</h5>\n          <img src={Headshot2}/>\n        <h5>FULL-BODY</h5>\n          <img src={Fullbody}/>\n      <h1>EMOTES</h1>\n        <h5>STREAM EMOTES</h5>\n        <img src={Emotes}/>\n    <ScrollToTop/>\n    <Footer/>\n    </div>\n  )\n}\n\nexport default Commissions\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/MyWork.js",["252"],"import React from 'react'\nimport './MyWork.css'\nimport ArtWorkImages from '../ArtWorkImages'\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Footer from './Footer';\nimport ScrollToTop from './ScrollUpButton';\n\n//Material ui was used for the layout to structure the webpage.\n//ArtWorkImages is mapped out and then item then uses the .description and .path property to display each image and title. \n\nconst Item = styled(Paper)(({ theme }) => ({\n  // backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  // ...theme.typography.body2,\n  // padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst MyWork = () => {\n  return (\n    <div>\n      <h1>My Art Work</h1>\n     <div>\n          <Box >\n            <Grid container spacing={1}>\n              {ArtWorkImages.map(\n                (item)=>(\n                  <Grid item xs={4}>\n                    <Item><h2>{item.description}</h2><img src={item.path}/></Item>\n                  </Grid>\n                  )\n              )}\n            </Grid>\n            </Box>\n      </div>\n    <ScrollToTop/>\n    <Footer/>\n    </div>\n  )\n}\n\nexport default MyWork\n\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/ContactMe.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Shop.js",["253"],"import React from 'react'\nimport './Shop.css'\nimport  ShopItems from \"./ShopItems\"\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport {Link} from \"react-router-dom\"\nimport Footer from './Footer';\nimport ScrollToTop from './ScrollUpButton';\n\n//ShopItems component stores all the images for the shop webpage.\n//ShopItems component is then applied with the map method to display the shop items.\n//In the route path on line 38, the link is mapping out each individual link for each image. \n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\nconst Shop = () => {\n\n  return (\n    <div>\n       <h1>Shop, Etsy-Previews</h1>\n       <p>These images are previews</p>\n      <Box >\n            <Grid container spacing={3}>\n              {ShopItems.map(\n                (item )=>(\n                  <Grid item xs={4}>\n                    <Item >\n                      <h4>{item.name}</h4>\n                      <Link to={`/Shop/${item.path}`}><img src={item.img}/></Link>\n                    </Item>\n                   \n                  </Grid>\n                  )\n              )}\n            </Grid>\n      </Box>\n    <ScrollToTop/>\n    <Footer/>\n    </div>\n  )\n}\n\nexport default Shop\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giwp.js",["254"],"import React from 'react'\nimport GiwpImage from '../ShopItemsBag/giwp.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Giwp = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GiwpImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>A5-Genshin-Impact-Weekly-Planner</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Giwp\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Bcs.js",["255"],"import React from 'react'\nimport BcsImage from \"../ShopItemsBag/bcs.jpg\"\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\n\nconst Bcs = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    BcsImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n\n       <h1>Butter Cat Stickers</h1>\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n      <Comments/>\n    </div>\n  )\n}\n\nexport default Bcs\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Bts.js",["256"],"import React from 'react'\nimport BtsImage from '../ShopItemsBag/bts.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Bts = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    BtsImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>BTS-Permission-To-Dance-Metallic-Sticker</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Bts\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Ac.js",["257"],"import React from 'react'\nimport AcImage from '../ShopItemsBag/ac.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//React simple image viewer package was used for the image viewer.\n\n\nconst Ac = () => {\n  \n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n  const galleryImage = [\n    AcImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Animal-Crossing-ACNH-Inspired-Leaf-Subscriber-Badges-Package</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Ac\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Cpsb.js",["258"],"import React from 'react'\nimport CpsbImage from '../ShopItemsBag/cpsb.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Cpsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n   CpsbImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Candy-Paw-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Cpsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Cspsba.js",["259"],"import React from 'react'\nimport CspsbaImage1 from '../ShopItemsBag/cspsba1.jpg'\nimport CspsbaImage2 from '../ShopItemsBag/cspsba2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Cspsba = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    CspsbaImage1,\n    CspsbaImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Cat-Succulent-Planter-Subscriber-Badges-A</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Cspsba\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giesb.js",["260"],"import React from 'react'\nimport GiesbImage from '../ShopItemsBag/giesb.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Giesb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GiesbImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Elemental-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Giesb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gic.js",["261"],"import React from 'react'\nimport GicImage1 from '../ShopItemsBag/gic1.jpg'\nimport GicImage2 from '../ShopItemsBag/gic2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gic = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GicImage1,\n    GicImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-CHILDE-TARTAGLIA</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gic\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Cspsbb.js",["262"],"import React from 'react'\nimport CspsbbImage1 from '../ShopItemsBag/cspsbb1.jpg'\nimport CspsbbImage2 from '../ShopItemsBag/cspsbb2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Cspsbb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    CspsbbImage1,\n    CspsbbImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Cat-Succulent-Planter-Subscriber-Badges-B</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Cspsbb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gig.js",["263"],"import React from 'react'\nimport GigImage1 from \"../ShopItemsBag/gig1.jpg\"\nimport GigImage2 from \"../ShopItemsBag/gig2.jpg\"\nimport GigImage3 from \"../ShopItemsBag/gig3.jpg\"\nimport GigImage4 from \"../ShopItemsBag/gig4.jpg\"\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gig = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GigImage1,\n    GigImage2,\n    GigImage3,\n    GigImage4\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-GANYU</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gig\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Ddhvs.js",["264"],"import React from 'react'\nimport DdhvsImage1 from '../ShopItemsBag/ddhvs1.jpg'\nimport DdhvsImage2 from '../ShopItemsBag/ddhvs2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Ddhvs = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    DdhvsImage1,\n    DdhvsImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Drunk-Dazed-Holographic-Vinyl-Sticker</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Ddhvs\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gij.js",["265"],"import React from 'react'\nimport GijImage1 from '../ShopItemsBag/gij1.jpg'\nimport GijImage2 from '../ShopItemsBag/gij2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gij = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GijImage1,\n    GijImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-JEAN</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gij\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gicvs.js",["266"],"import React from 'react'\nimport GicvsImage1 from '../ShopItemsBag/gicvs1.jpg'\nimport GicvsImage2 from '../ShopItemsBag/gicvs2.jpg'\nimport GicvsImage3 from '../ShopItemsBag/gicvs3.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gicvs = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GicvsImage1,\n    GicvsImage2,\n    GicvsImage3,\n    \n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Character-Vinyl-Stickers</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gicvs\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gikaz.js",["267"],"import React from 'react'\nimport GikazImage1 from '../ShopItemsBag/gikaz1.jpg'\nimport GikazImage2 from '../ShopItemsBag/gikaz2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gikaz = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GikazImage1,\n    GikazImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-KAZUHA</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gikaz\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gie.js",["268"],"import React from 'react'\nimport GieImage1 from '../ShopItemsBag/gie1.jpg'\nimport GieImage2 from '../ShopItemsBag/gie2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gie = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GieImage1,\n    GieImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-EULA</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gie\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gim.js",["269"],"import React from 'react'\nimport GimImage1 from '../ShopItemsBag/gim1.jpg'\nimport GimImage2 from '../ShopItemsBag/gim2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gim = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GimImage1,\n    GimImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-MONA</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gim\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gih.js",["270"],"import React from 'react'\nimport GihImage1 from '../ShopItemsBag/gih1.jpg'\nimport GihImage2 from '../ShopItemsBag/gih2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gih = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GihImage1,\n    GihImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-HUTAO</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gih\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giy.js",["271"],"import React from 'react'\nimport GiyImage1 from '../ShopItemsBag/giy1.jpg'\nimport GiyImage2 from '../ShopItemsBag/giy2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Giy = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GiyImage1,\n    GiyImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-YOIMIYA</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Giy\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Jnsb.js",["272"],"import React from 'react'\nimport JnsbImage from '../ShopItemsBag/jnsb.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Jnsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    JnsbImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Jelly-Neko-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Jnsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Lacspsb.js",["273"],"import React from 'react'\nimport LacspsbImage from '../ShopItemsBag/lacspsb.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Lacspsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    LacspsbImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>LIMITED-ADD-ON-Cat-Succulent-Planter-Subscriber-Badge</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Lacspsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giz.js",["274"],"import React from 'react'\nimport GizImage1 from '../ShopItemsBag/giz1.jpg'\nimport GizImage2 from '../ShopItemsBag/giz2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Giz = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GizImage1,\n    GizImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-ZHONGLI</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Giz\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Kda.js",["275"],"import React from 'react'\nimport KdaImage1 from '../ShopItemsBag/kda1.jpg'\nimport KdaImage2 from '../ShopItemsBag/kda2.jpg'\nimport KdaImage3 from '../ShopItemsBag/kda3.jpg'\nimport KdaImage4 from '../ShopItemsBag/kda4.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Kda = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    KdaImage1,\n    KdaImage2,\n    KdaImage3,\n    KdaImage4\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>K/DA-Inspired-Stream</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Kda\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Mgsb.js",["276"],"import React from 'react'\nimport MgsbImage from '../ShopItemsBag/mgsb.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Mgsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    MgsbImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Magic-Girl-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Mgsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Mcsb.js",["277"],"import React from 'react'\nimport McsbImage from '../ShopItemsBag/mcsb.jpg' \nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Mcsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    McsbImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Milk-Carton-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Mcsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Mahvs.js",["278"],"import React from 'react'\nimport MahvsImage1 from '../ShopItemsBag/mahvs1.jpg'\nimport MahvsImage2 from '../ShopItemsBag/mahvs2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Mahvs = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    MahvsImage1,\n    MahvsImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Moonboat-Adventure-Holographic-Vinyl-Sticker</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Mahvs\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sbspa.js",["279"],"import React from 'react'\nimport SbspaImage from '../ShopItemsBag/sbspa.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Sbspa = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    SbspaImage\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Sakura-Blossom-Stream-Package-A</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Sbspa\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sbspb.js",["280"],"import React from 'react'\nimport SbspbImage1 from '../ShopItemsBag/sbspb1.jpg'\nimport SbspbImage2 from '../ShopItemsBag/sbspb2.jpg'\nimport SbspbImage3 from '../ShopItemsBag/sbspb3.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Sbspb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    SbspbImage1,\n    SbspbImage2,\n    SbspbImage3\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Sakura-Blossom-Stream-Package-B</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Sbspb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sssb.js",["281"],"import React from 'react'\nimport SssbImage1 from '../ShopItemsBag/sssb1.jpg'\nimport SssbImage2 from '../ShopItemsBag/sssb2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Sssb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    SssbImage1,\n    SssbImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Strawberry-Shibe-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Sssb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Vnmvs.js",["282"],"import React from 'react'\nimport VnmvsImage1 from '../ShopItemsBag/vnmvs1.jpg'\nimport VnmvsImage2 from '../ShopItemsBag/vnmvs2.jpg'\nimport VnmvsImage3 from '../ShopItemsBag/vnmvs3.jpg'\nimport VnmvsImage4 from '../ShopItemsBag/vnmvs4.jpg'\nimport VnmvsImage5 from '../ShopItemsBag/vnmvs5.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Vnmvs = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    VnmvsImage1,\n    VnmvsImage2,\n    VnmvsImage3,\n    VnmvsImage4,\n    VnmvsImage5\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Vitasoy-Neko-Matte-Vinyl-Stickers</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Vnmvs\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gikam.js",["283"],"import React from 'react'\nimport GikamImage1 from '../ShopItemsBag/gikam1.jpg'\nimport GikamImage2 from '../ShopItemsBag/gikam2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gikam = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GikamImage1,\n    GikamImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-KAMISATO-AYAKA</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gikam\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Gik.js",["284"],"import React from 'react'\nimport GikImage1 from '../ShopItemsBag/gik1.jpg'\nimport GikImage2 from '../ShopItemsBag/gik2.jpg'\nimport GikImage3 from '../ShopItemsBag/gik3.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Gik = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    GikImage1,\n    GikImage2,\n    GikImage3\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-KLEE</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Gik\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Upmsb.js",["285"],"import React from 'react'\nimport UpmsbImage1 from '../ShopItemsBag/upmsb1.jpg'\nimport UpmsbImage2 from '../ShopItemsBag/upmsb2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Upmsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    UpmsbImage1,\n    UpmsbImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Usagi-Pastel-Moon-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Upmsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Giq.js",["286"],"import React from 'react'\nimport Giqimage1 from '../ShopItemsBag/giq1.jpg'\nimport Giqimage2 from '../ShopItemsBag/giq2.jpg'\nimport Giqimage3 from '../ShopItemsBag/giq3.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Giq = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    Giqimage1,\n    Giqimage2,\n    Giqimage3\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Genshin-Impact-Music-Clear-Acrylic-Charm-QIQI</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Giq\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/ImageRoutes/Sbsb.js",["287"],"import React from 'react'\nimport SbsbImage1 from '../ShopItemsBag/sbsb1.jpg'\nimport SbsbImage2 from '../ShopItemsBag/sbsb2.jpg'\nimport { useState, useCallback } from 'react';\nimport ImageViewer from 'react-simple-image-viewer';\nimport Comments  from '../routes/Comments';\n\n//galleryImage then stores the imported art work for every image.\n//Each image is then mapped out once the user clicks on the art work image. \n\nconst Sbsb = () => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const galleryImage = [\n    SbsbImage1,\n    SbsbImage2\n  ]\n  \n  const openImageViewer = useCallback((index) => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n  return (\n    <div>\n       <h1>Sakura-Blossom-Subscriber-Badges</h1>\n       {/* <img src={AcImage}/> */}\n       {galleryImage.map((src, index) => (\n        <img\n          src={ src }\n          onClick={ () => openImageViewer(index) }\n          // width=\"300\"\n          // key={ index }\n          \n        />\n      ))}\n\n      {isViewerOpen && (\n        <ImageViewer\n          src={ galleryImage}\n          // width=\"400\"\n          // height=\"600\"\n          currentIndex={ currentImage }\n          disableScroll={ false }\n          closeOnClickOutside={ true }\n          onClose={ closeImageViewer }\n        />\n      )}\n    <Comments/>\n    </div>\n  )\n}\n\nexport default Sbsb\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Footer.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/ArtWorkImages.js",["288"],"import React from 'react'\nimport Ayato from \"./ArtWorkImages/Ayato.jpg\"\nimport BattleBunny from \"./ArtWorkImages/BattleBunny.jpeg\"\nimport Birthday from \"./ArtWorkImages/Birthday.jpeg\"\nimport Chino from \"./ArtWorkImages/Chino.jpeg\"\nimport Elementalist from \"./ArtWorkImages/Elementalist.jpg\"\nimport FiveMoreMinutes from \"./ArtWorkImages/FiveMoreMinutes.jpeg\"\nimport IceKing from \"./ArtWorkImages/IceKing.jpeg\"\nimport IveFoundYou from \"./ArtWorkImages/IveFoundYou.jpeg\"\nimport KCRekkles from \"./ArtWorkImages/KCRekkles.jpg\"\nimport KeqingAndRexLapis from \"./ArtWorkImages/KeqingAndRexLapis.jpeg\"\nimport Kiana from \"./ArtWorkImages/Kiana.jpeg\"\nimport LanternRiteYaeMiko from \"./ArtWorkImages/LanternRiteYaeMiko.jpg\"\nimport LunaKindredMona from \"./ArtWorkImages/LunaKindredMona.jpeg\"\nimport MidnightMona from \"./ArtWorkImages/MidnightMona.jpeg\"\nimport MonaAndSeelie from \"./ArtWorkImages/MonaAndSeelie.jpeg\"\nimport MonarchMona from \"./ArtWorkImages/MonarchMona.jpg\"\nimport Pardofelis from \"./ArtWorkImages/Pardofelis.jpg\"\nimport PorcelainGanyu from \"./ArtWorkImages/PorcelainGanyu.png\"\nimport PoroKingxMatty from \"./ArtWorkImages/PoroKingxMatty.jpeg\"\nimport RedQueenHuTao from \"./ArtWorkImages/RedQueenHuTao.jpeg\"\nimport SantaBaby from \"./ArtWorkImages/SantaBaby.jpeg\"\nimport StarchasmHutao from \"./ArtWorkImages/StarchasmHutao.jpg\"\nimport StargazerVienna from \"./ArtWorkImages/StargazerVienna.jpg\"\nimport WindblumeEula from \"./ArtWorkImages/WindblumeEula.jpeg\"\nimport WindblumeFestivalKaeya from \"./ArtWorkImages/WindblumeFestivalKaeya.jpeg\"\nimport YaeMiko from \"./ArtWorkImages/YaeMiko.jpg\"\nimport YearOfTheTiger from \"./ArtWorkImages/YearOfTheTiger.jpg\"\n\n//Collection of images which will be mapped out onto the my work page.\n//Description and path object properties will be mapped out and displayed on to my work page.\n\nconst ArtWorkImages = [\n  \n    {\n        description:\"Ayato\",\n        path: Ayato\n\n      },\n      {\n        description:\"Battle-Bunny\",\n        path: BattleBunny\n      },\n      {\n        description:\"Birthday\",\n        path: Birthday\n      },\n      {\n        description:\"Chino\",\n        path: Chino\n      },\n      {\n        description:\"Elementalist\",\n        path: Elementalist\n      },\n      {\n        description:\"Five-More-Minutes\",\n        path: FiveMoreMinutes\n      },\n      {\n        description:\"Ice-King\",\n        path: IceKing\n      },\n      {\n        description:\"Ive-Found-You\",\n        path: IveFoundYou\n      },\n      {\n        description:\"KCRekkles\",\n        path: KCRekkles\n      },\n      {\n        description:\"Keqing-And-Rex-Lapis\",\n        path: KeqingAndRexLapis\n      },\n      {\n        description:\"Kiana\",\n        path: Kiana\n      },\n      {\n        description:\"Lantern-Rite-Yae-Miko\",\n        path: LanternRiteYaeMiko\n      },\n      {\n        description:\"Luna-Kindred-Mona\",\n        path:LunaKindredMona\n      },\n      {\n        description:\"Midnight-Mona\",\n        path: MidnightMona \n      },\n      {\n        description:\"Mona-And-Seelie\",\n        path: MonaAndSeelie\n      },\n      {\n        description:\"Monarch-Mona\",\n        path: MonarchMona\n      },\n      {\n        description:\"Pardofelis\",\n        path: Pardofelis\n      },\n      {\n        description:\"Porcelain-Ganyu\",\n        path: PorcelainGanyu\n      },\n      {\n        description:\"Poro-Kingx-Matty\",\n        path: PoroKingxMatty\n      },\n      {\n        description:\"Red-Queen-Hu-Tao\",\n        path: RedQueenHuTao\n      },\n      {\n        description:\"Santa-Baby\",\n        path: SantaBaby\n      },\n      {\n        description:\"Starchasm-Hu-Tao\",\n        path: StarchasmHutao\n      },\n      {\n        description:\"Stargazer-Vienna\",\n        path: StargazerVienna\n      },\n      {\n        description:\"Windblume-Eula \",\n        path: WindblumeEula \n      },\n      {\n        description:\"Windblume-Festival-Kaeya\",\n        path: WindblumeFestivalKaeya\n      },\n      {\n        description:\"YaeMiko\",\n        path: YaeMiko\n      },\n      {\n        description:\"Year-Of-The-Tiger\",\n        path: YearOfTheTiger\n      }\n      \n    \n]\n\nexport default ArtWorkImages\n","/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/ScrollUpButton.js",[],"/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/Comments.js",["289"],"/Users/mingchiwong/Documents/code/MercuryJC2/src/routes/ShopItems.js",[],{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","severity":1,"message":"295","line":17,"column":40,"nodeType":"296","endLine":17,"endColumn":82},{"ruleId":"294","severity":1,"message":"295","line":24,"column":11,"nodeType":"296","endLine":24,"endColumn":34},{"ruleId":"294","severity":1,"message":"295","line":25,"column":11,"nodeType":"296","endLine":25,"endColumn":31},{"ruleId":"294","severity":1,"message":"295","line":27,"column":11,"nodeType":"296","endLine":27,"endColumn":35},{"ruleId":"294","severity":1,"message":"295","line":28,"column":11,"nodeType":"296","endLine":28,"endColumn":38},{"ruleId":"294","severity":1,"message":"295","line":30,"column":11,"nodeType":"296","endLine":30,"endColumn":38},{"ruleId":"294","severity":1,"message":"295","line":31,"column":11,"nodeType":"296","endLine":31,"endColumn":38},{"ruleId":"294","severity":1,"message":"295","line":34,"column":11,"nodeType":"296","endLine":34,"endColumn":33},{"ruleId":"294","severity":1,"message":"295","line":36,"column":9,"nodeType":"296","endLine":36,"endColumn":30},{"ruleId":"294","severity":1,"message":"295","line":39,"column":11,"nodeType":"296","endLine":39,"endColumn":33},{"ruleId":"294","severity":1,"message":"295","line":41,"column":11,"nodeType":"296","endLine":41,"endColumn":32},{"ruleId":"294","severity":1,"message":"295","line":44,"column":9,"nodeType":"296","endLine":44,"endColumn":28},{"ruleId":"294","severity":1,"message":"295","line":32,"column":54,"nodeType":"296","endLine":32,"endColumn":76},{"ruleId":"294","severity":1,"message":"295","line":38,"column":55,"nodeType":"296","endLine":38,"endColumn":76},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":33,"column":9,"nodeType":"296","endLine":39,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":38,"column":9,"nodeType":"296","endLine":44,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":37,"column":9,"nodeType":"296","endLine":43,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":38,"column":9,"nodeType":"296","endLine":44,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":32,"column":9,"nodeType":"296","endLine":38,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":37,"column":9,"nodeType":"296","endLine":43,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":40,"column":9,"nodeType":"296","endLine":46,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":36,"column":9,"nodeType":"296","endLine":42,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":36,"column":9,"nodeType":"296","endLine":42,"endColumn":11},{"ruleId":"294","severity":1,"message":"295","line":34,"column":9,"nodeType":"296","endLine":40,"endColumn":11},{"ruleId":"297","severity":1,"message":"298","line":1,"column":8,"nodeType":"299","messageId":"300","endLine":1,"endColumn":13},{"ruleId":"301","severity":1,"message":"302","line":57,"column":6,"nodeType":"303","endLine":57,"endColumn":8,"suggestions":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'comments'. Either include it or remove the dependency array.","ArrayExpression",["307"],"no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},"Update the dependencies array to be: [comments]",{"range":"310","text":"311"},[1906,1908],"[comments]"]